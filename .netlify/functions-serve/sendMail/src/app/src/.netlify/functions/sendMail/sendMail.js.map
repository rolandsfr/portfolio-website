{
  "version": 3,
  "sources": ["../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/store/store.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/methods/init/init.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/utils/validateParams.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/models/EmailJSResponseStatus.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/api/sendPost.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/methods/send/send.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/methods/sendForm/sendForm.js", "../../../../../../projects/portfolio/node_modules/emailjs-com/cjs/index.js", "../../../../../../projects/portfolio/app/src/.netlify/functions/sendMail/sendMail.ts"],
  "sourceRoot": "C:/Users/Rolands/AppData/Local/Temp/tmp-14048-yvR3OnMKipre",
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.store = void 0;\nexports.store = {\n    _origin: 'https://api.emailjs.com',\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.init = void 0;\nconst store_1 = require(\"../../store/store\");\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nconst init = (userID, origin = 'https://api.emailjs.com') => {\n    store_1.store._userID = userID;\n    store_1.store._origin = origin;\n};\nexports.init = init;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateParams = void 0;\nconst validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\nexports.validateParams = validateParams;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = void 0;\nclass EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\nexports.EmailJSResponseStatus = EmailJSResponseStatus;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendPost = void 0;\nconst EmailJSResponseStatus_1 = require(\"../models/EmailJSResponseStatus\");\nconst store_1 = require(\"../store/store\");\nconst sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus_1.EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus_1.EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store_1.store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\nexports.sendPost = sendPost;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.send = void 0;\nconst store_1 = require(\"../../store/store\");\nconst validateParams_1 = require(\"../../utils/validateParams\");\nconst sendPost_1 = require(\"../../api/sendPost\");\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nconst send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store_1.store._userID;\n    validateParams_1.validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost_1.sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\nexports.send = send;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendForm = void 0;\nconst store_1 = require(\"../../store/store\");\nconst validateParams_1 = require(\"../../utils/validateParams\");\nconst sendPost_1 = require(\"../../api/sendPost\");\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nconst sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store_1.store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams_1.validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost_1.sendPost('/api/v1.0/email/send-form', formData);\n};\nexports.sendForm = sendForm;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendForm = exports.send = exports.init = void 0;\nconst init_1 = require(\"./methods/init/init\");\nObject.defineProperty(exports, \"init\", { enumerable: true, get: function () { return init_1.init; } });\nconst send_1 = require(\"./methods/send/send\");\nObject.defineProperty(exports, \"send\", { enumerable: true, get: function () { return send_1.send; } });\nconst sendForm_1 = require(\"./methods/sendForm/sendForm\");\nObject.defineProperty(exports, \"sendForm\", { enumerable: true, get: function () { return sendForm_1.sendForm; } });\nexports.default = {\n    init: init_1.init,\n    send: send_1.send,\n    sendForm: sendForm_1.sendForm,\n};\n", "import { Handler } from \"@netlify/functions\";\r\nimport { Response } from \"@netlify/functions/src/function/response\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { Context } from \"@netlify/functions/src/function/context\";\r\nimport { Event } from \"@netlify/functions/src/function/event\";\r\n\r\nconst handler: Handler = async (\r\n  event: Event,\r\n  context: Context\r\n): Promise<Response> => {\r\n  const { EMAIL_JS } = process.env;\r\n  emailjs.init(EMAIL_JS);\r\n\r\n  const { email, name, message } = JSON.parse(event.body);\r\n\r\n  let templateParams = {\r\n    name,\r\n    email,\r\n    message,\r\n  };\r\n\r\n  let response: {\r\n    responseText: string;\r\n    successful: boolean;\r\n  } = {\r\n    responseText: \"\",\r\n    successful: true,\r\n  };\r\n\r\n  try {\r\n    await emailjs.send(\"gmail\", \"msg\", templateParams);\r\n    response.responseText = \"Your message was successfully sent!\";\r\n    response.successful = true;\r\n  } catch (e) {\r\n    response.responseText = e.message;\r\n    response.successful = false;\r\n  }\r\n\r\n  return {\r\n    body: JSON.stringify(response),\r\n    statusCode: 200,\r\n  };\r\n};\r\n\r\nexport { handler };\r\n"],
  "mappings": "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",
  "names": []
}
